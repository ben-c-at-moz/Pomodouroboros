#!/bin/zsh -ex

mypy ./src;
rm -fr ./dist;

# https://github.com/ronaldoussoren/py2app/issues/444
python setup.py py2app | cat;

. "${HOME}/.signing-vars.sh";

# ^ fill out this file with identity-specific stuff:

# NOTARIZE_IDENTITY= # one of the SHA1 certificate hashes from `security find-identity -v -p codesigning`
# NOTARIZE_TEAM_ID= # the thing in parentheses in the output of that command
# NOTARIZE_APPLE_ID= # the apple ID of the developer account that retrieved that certificate
# NOTARIZE_PROFILE= # the string that you previously passed to `xcrun notarytool store-credentials "${NOTARIZE_PROFILE}" --apple-id "${NOTARIZE_APPLE_ID}" --team-id "${NOTARIZE_TEAM_ID}"`

. ./.signing-vars.sh

# ^ fill out this file with application-specific stuff
# APPLICATION_NAME= should be the file name of the .app; Foo for Foo.app

# store credentials with:

# notarytool

cd dist;

find "${APPLICATION_NAME}.app" -iname '*.so' -or -iname '*.dylib' |
    while read libfile; do
        codesign --sign "${NOTARIZE_IDENTITY}" \
                 --entitlements ../python-entitlements.plist \
                 --deep "${libfile}" \
                 --force \
                 --options runtime;
    done;

codesign --sign "${NOTARIZE_IDENTITY}" \
         --entitlements ../python-entitlements.plist \
         --deep "${APPLICATION_NAME}.app" \
         --force \
         --options runtime;

zip -yr \
    "${APPLICATION_NAME}.app.zip" \
    "${APPLICATION_NAME}.app";

xcrun notarytool submit \
      "${APPLICATION_NAME}.app.zip" \
      --apple-id="${NOTARIZE_APPLE_ID}" \
      --team-id="${NOTARIZE_TEAM_ID}" \
      --keychain-profile="${NOTARIZE_PROFILE}" \
      --wait

xcrun stapler staple "./${APPLICATION_NAME}.app";

zip -qyr "${APPLICATION_NAME}.notarized.app.zip" "${APPLICATION_NAME}.app";
